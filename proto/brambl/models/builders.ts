/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.6.1
 * source: brambl/models/builders.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../validate/validate";
import * as dependency_2 from "./../../scalapb/scalapb";
import * as dependency_3 from "./../../scalapb/validate";
import * as dependency_4 from "./../../quivr/models/shared";
import * as dependency_5 from "./known_identifier";
import * as dependency_6 from "./box/lock";
import * as dependency_7 from "./box/value";
import * as pb_1 from "google-protobuf";
export namespace co.topl.brambl.models.builders {
    export class OutputBuildRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            lock?: dependency_6.co.topl.brambl.models.box.Lock;
            value?: dependency_7.co.topl.brambl.models.box.Value;
            metadata?: dependency_4.quivr.models.SmallData;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("lock" in data && data.lock != undefined) {
                    this.lock = data.lock;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
            }
        }
        get lock() {
            return pb_1.Message.getWrapperField(this, dependency_6.co.topl.brambl.models.box.Lock, 1) as dependency_6.co.topl.brambl.models.box.Lock;
        }
        set lock(value: dependency_6.co.topl.brambl.models.box.Lock) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_lock() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get value() {
            return pb_1.Message.getWrapperField(this, dependency_7.co.topl.brambl.models.box.Value, 2) as dependency_7.co.topl.brambl.models.box.Value;
        }
        set value(value: dependency_7.co.topl.brambl.models.box.Value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get metadata() {
            return pb_1.Message.getWrapperField(this, dependency_4.quivr.models.SmallData, 3) as dependency_4.quivr.models.SmallData;
        }
        set metadata(value: dependency_4.quivr.models.SmallData) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_metadata() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            lock?: ReturnType<typeof dependency_6.co.topl.brambl.models.box.Lock.prototype.toObject>;
            value?: ReturnType<typeof dependency_7.co.topl.brambl.models.box.Value.prototype.toObject>;
            metadata?: ReturnType<typeof dependency_4.quivr.models.SmallData.prototype.toObject>;
        }): OutputBuildRequest {
            const message = new OutputBuildRequest({});
            if (data.lock != null) {
                message.lock = dependency_6.co.topl.brambl.models.box.Lock.fromObject(data.lock);
            }
            if (data.value != null) {
                message.value = dependency_7.co.topl.brambl.models.box.Value.fromObject(data.value);
            }
            if (data.metadata != null) {
                message.metadata = dependency_4.quivr.models.SmallData.fromObject(data.metadata);
            }
            return message;
        }
        toObject() {
            const data: {
                lock?: ReturnType<typeof dependency_6.co.topl.brambl.models.box.Lock.prototype.toObject>;
                value?: ReturnType<typeof dependency_7.co.topl.brambl.models.box.Value.prototype.toObject>;
                metadata?: ReturnType<typeof dependency_4.quivr.models.SmallData.prototype.toObject>;
            } = {};
            if (this.lock != null) {
                data.lock = this.lock.toObject();
            }
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            if (this.metadata != null) {
                data.metadata = this.metadata.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_lock)
                writer.writeMessage(1, this.lock, () => this.lock.serialize(writer));
            if (this.has_value)
                writer.writeMessage(2, this.value, () => this.value.serialize(writer));
            if (this.has_metadata)
                writer.writeMessage(3, this.metadata, () => this.metadata.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): OutputBuildRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new OutputBuildRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.lock, () => message.lock = dependency_6.co.topl.brambl.models.box.Lock.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.value, () => message.value = dependency_7.co.topl.brambl.models.box.Value.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.metadata, () => message.metadata = dependency_4.quivr.models.SmallData.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): OutputBuildRequest {
            return OutputBuildRequest.deserialize(bytes);
        }
    }
    export class InputBuildRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: dependency_5.co.topl.brambl.models.KnownIdentifier;
            metadata?: dependency_4.quivr.models.SmallData;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
            }
        }
        get id() {
            return pb_1.Message.getWrapperField(this, dependency_5.co.topl.brambl.models.KnownIdentifier, 1) as dependency_5.co.topl.brambl.models.KnownIdentifier;
        }
        set id(value: dependency_5.co.topl.brambl.models.KnownIdentifier) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_id() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get metadata() {
            return pb_1.Message.getWrapperField(this, dependency_4.quivr.models.SmallData, 2) as dependency_4.quivr.models.SmallData;
        }
        set metadata(value: dependency_4.quivr.models.SmallData) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_metadata() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            id?: ReturnType<typeof dependency_5.co.topl.brambl.models.KnownIdentifier.prototype.toObject>;
            metadata?: ReturnType<typeof dependency_4.quivr.models.SmallData.prototype.toObject>;
        }): InputBuildRequest {
            const message = new InputBuildRequest({});
            if (data.id != null) {
                message.id = dependency_5.co.topl.brambl.models.KnownIdentifier.fromObject(data.id);
            }
            if (data.metadata != null) {
                message.metadata = dependency_4.quivr.models.SmallData.fromObject(data.metadata);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: ReturnType<typeof dependency_5.co.topl.brambl.models.KnownIdentifier.prototype.toObject>;
                metadata?: ReturnType<typeof dependency_4.quivr.models.SmallData.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id.toObject();
            }
            if (this.metadata != null) {
                data.metadata = this.metadata.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_id)
                writer.writeMessage(1, this.id, () => this.id.serialize(writer));
            if (this.has_metadata)
                writer.writeMessage(2, this.metadata, () => this.metadata.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InputBuildRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new InputBuildRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.id, () => message.id = dependency_5.co.topl.brambl.models.KnownIdentifier.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.metadata, () => message.metadata = dependency_4.quivr.models.SmallData.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): InputBuildRequest {
            return InputBuildRequest.deserialize(bytes);
        }
    }
}
